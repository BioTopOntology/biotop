<?xml version="1.0"?>
<!DOCTYPE rdf:RDF [
<!ENTITY base "http://www.ifomis.org/obo/ro/1.0/light">
<!ENTITY rol "&base;#">
<!ENTITY dc "http://purl.org/dc/elements/1.1/">
<!ENTITY protege-dc-import "http://protege.stanford.edu/plugins/owl/dc/protege-dc.owl">
<!ENTITY protege-dc "&protege-dc-import;#">
<!ENTITY w3 "http://www.w3.org">
<!ENTITY owl "&w3;/2002/07/owl#">
<!ENTITY rdf "&w3;/1999/02/22-rdf-syntax-ns#">
<!ENTITY rdfs "&w3;/2000/01/rdf-schema#">
<!ENTITY xsd "&w3;/2001/XMLSchema#">
]>
<rdf:RDF xmlns:rol="&rol;"
		xmlns:dc="&dc;"
		xmlns:owl="&owl;"
		xmlns:protege-dc="&protege-dc;"
		xmlns:rdf="&rdf;"
		xmlns:rdfs="&rdfs;"
		xmlns:xsd="&xsd;"
		xml:base="&base;">
	<owl:Ontology rdf:about="">
		<dc:title rdf:datatype="&xsd;string">Relationship Ontology light (RO light) (instance level relation subset)</dc:title>
		<dc:creator rdf:datatype="&xsd;string">Chris Mungall</dc:creator>
		<dc:creator rdf:datatype="&xsd;string">Holger Stenzhorn</dc:creator>
		<dc:creator rdf:datatype="&xsd;string">Stefan Schulz</dc:creator>
		<dc:source rdf:datatype="&xsd;string">Barry Smith, Werner Ceusters, Bert Klagges, Jacob Koehler, Anand Kumar, Jane Lomax, Chris Mungall, Fabian Neuhaus, Alan Rector and Cornelius Rosse: "Relations in Biomedical Ontologies"</dc:source>
		<dc:date rdf:datatype="&xsd;date">2007-11-29</dc:date>
		<owl:versionInfo rdf:datatype="&xsd;string">1.0</owl:versionInfo>
		<owl:imports rdf:resource="&protege-dc-import;"/>
    </owl:Ontology>
	<owl:ObjectProperty rdf:ID="adjacentTo">
		<rdfs:label rdf:datatype="&xsd;string">adjacent_to</rdfs:label>
		<rdfs:comment rdf:datatype="&xsd;string">Relation of proximity between disjoint continuants. Adjacent_to satisfies some of the axioms governing the relation referred to in the literature of qualitative topology as 'external connectedness' . Analogs of other mereotopological relations (qualitative relations between spatial regions involving parthood, boundary and connectedness) can also be defined, and these too can be applied to the material and immaterial continuants which occupy such regions on the instance level.</rdfs:comment>
	</owl:ObjectProperty>
	<owl:ObjectProperty rdf:ID="agentIn">
		<rdfs:label rdf:datatype="&xsd;string">agent_in</rdfs:label>
		<rdfs:comment rdf:datatype="&xsd;string"/>
		<rdfs:subPropertyOf rdf:resource="#participatesIn"/>
		<rdfs:comment rdf:datatype="&xsd;string">inverseOf hasAgent</rdfs:comment>
	</owl:ObjectProperty>
	<owl:ObjectProperty rdf:ID="containedIn">
		<rdfs:label rdf:datatype="&xsd;string">contained_in</rdfs:label>
		<rdfs:comment rdf:datatype="&xsd;string">Containment obtains in each case between material and immaterial continuants, for instance: lung containedIn thoracic cavity; bladder containedIn pelvic cavity. Hence containment is not a transitive relation. If c partOf c1 at t then we have also, by our definition and by the axioms of mereology applied to spatial regions, c locatedIn c1 at t. Thus, many examples of instance-level location relations for continuants are in fact cases of instance-level parthood. For material continuants location and parthood coincide. Containment is location not involving parthood, and arises only where some immaterial continuant is involved. To understand this relation, we first define overlap for continuants as follows: c1 overlap c2 at t =def for some c, c partOf c1 at t and c partOf c2 at t.</rdfs:comment>
		<rdfs:comment rdf:datatype="&xsd;string">inverseOf contains</rdfs:comment>
	</owl:ObjectProperty>
	<owl:ObjectProperty rdf:ID="contains">
		<rdfs:label rdf:datatype="&xsd;string">contains</rdfs:label>
		<rdfs:comment rdf:datatype="&xsd;string"/>
		<rdfs:comment rdf:datatype="&xsd;string">inverseOf containedIn</rdfs:comment>
	</owl:ObjectProperty>
	<owl:ObjectProperty rdf:ID="derivedInto">
		<rdfs:label rdf:datatype="&xsd;string">derived_into</rdfs:label>
		<rdfs:comment rdf:datatype="&xsd;string"/>
		<rdfs:comment rdf:datatype="&xsd;string">inverseOf derivesFrom</rdfs:comment>
		<rdf:type rdf:resource="&owl;TransitiveProperty"/>
	</owl:ObjectProperty>
	<owl:ObjectProperty rdf:ID="derivesFrom">
		<rdfs:label rdf:datatype="&xsd;string">derives_from</rdfs:label>
		<rdfs:comment rdf:datatype="&xsd;string">Derivation is a relation holding between non-identicals. More precisely, it holds between distinct material continuants when one succeeds the other across a temporal divide in such a way that at least a biologically significant portion of the matter of the earlier continuant is inherited by the later. Thus we will have axioms to the effect that from c derivesFrom c1 we can infer that c and c1 are not identical and that there is some instant of time t such that c1 exists only prior to and c only subsequent to t. We will also be able to infer that the spatial region occupied by c as it begins to exist at t overlaps with the spatial region occupied by c1 as it ceases to exist in the same instant.</rdfs:comment>
		<rdfs:comment rdf:datatype="&xsd;string">inverseOf derivedInto</rdfs:comment>
		<rdf:type rdf:resource="&owl;TransitiveProperty"/>
	</owl:ObjectProperty>
	<owl:ObjectProperty rdf:ID="hasAgent">
		<rdfs:label rdf:datatype="&xsd;string">has_agent</rdfs:label>
		<rdfs:comment rdf:datatype="&xsd;string">As for hasParticipant, but with the additional condition that the component instance is causally active in the relevant process</rdfs:comment>
		<rdfs:subPropertyOf rdf:resource="#hasParticipant"/>
		<rdfs:comment rdf:datatype="&xsd;string">inverseOf agentIn</rdfs:comment>
	</owl:ObjectProperty>
	<owl:ObjectProperty rdf:ID="hasPart">
		<rdfs:label rdf:datatype="&xsd;string">has_part</rdfs:label>
		<rdfs:comment rdf:datatype="&xsd;string"/>
		<rdfs:comment rdf:datatype="&xsd;string">inverseOf partOf</rdfs:comment>
		<rdf:type rdf:resource="&owl;TransitiveProperty"/>
	</owl:ObjectProperty>
	<owl:ObjectProperty rdf:ID="hasParticipant">
		<rdfs:label rdf:datatype="&xsd;string">has_participant</rdfs:label>
		<rdfs:comment rdf:datatype="&xsd;string">HasParticipant is a primitive instance-level relation between a process, a continuant, and a time at which the continuant participates in some way in the process. The relation obtains, for example, when this particular process of oxygen exchange across this particular alveolar membrane hasParticipant this particular sample of hemoglobin at this particular time.</rdfs:comment>
		<rdfs:comment rdf:datatype="&xsd;string">inverseOf participatesIn</rdfs:comment>
	</owl:ObjectProperty>
	<owl:ObjectProperty rdf:ID="hasProperPart">
		<rdfs:label rdf:datatype="&xsd;string">has_proper_part</rdfs:label>
		<rdfs:comment rdf:datatype="&xsd;string"/>
		<rdfs:subPropertyOf rdf:resource="#hasPart"/>
		<rdfs:comment rdf:datatype="&xsd;string">inverseOf properPartOf</rdfs:comment>
		<rdf:type rdf:resource="&owl;TransitiveProperty"/>
	</owl:ObjectProperty>	
	<owl:ObjectProperty rdf:ID="locatedIn">
		<rdfs:label rdf:datatype="&xsd;string">located_in</rdfs:label>
		<rdfs:comment rdf:datatype="&xsd;string">The primitive instance-level relation c locatedIn r at t reflects the fact that each continuant is at any given time associated with exactly one spatial region, namely its exact location. Following we can use this relation to define a further instance-level location relation - not between a continuant and the region which it exactly occupies, but rather between one continuant and another. c is located in c1, in this sense, whenever the spatial region occupied by c is partOf the spatial region occupied by c1. Note that this relation comprehends both the relation of exact location between one continuant and another which obtains when r and r1 are identical (for example, when a portion of fluid exactly fills a cavity), as well as those sorts of inexact location relations which obtain, for example, between brain and head or between ovum and uterus</rdfs:comment>
		<rdfs:comment rdf:datatype="&xsd;string">inverseOf locationOf</rdfs:comment>
		<rdf:type rdf:resource="&owl;TransitiveProperty"/>
	</owl:ObjectProperty>
	<owl:ObjectProperty rdf:ID="locationOf">
		<rdfs:label rdf:datatype="&xsd;string">location_of</rdfs:label>
		<rdfs:comment rdf:datatype="&xsd;string"/>
		<rdfs:comment rdf:datatype="&xsd;string">inverseOf locatedIn</rdfs:comment>
		<rdf:type rdf:resource="&owl;TransitiveProperty"/>
	</owl:ObjectProperty>
	<owl:ObjectProperty rdf:ID="participatesIn">
		<rdfs:label rdf:datatype="&xsd;string">participates_in</rdfs:label>
		<rdfs:comment rdf:datatype="&xsd;string"/>
		<rdfs:comment rdf:datatype="&xsd;string">inverseOf hasParticipant</rdfs:comment>
	</owl:ObjectProperty>
	<owl:ObjectProperty rdf:ID="partOf">
		<rdfs:label rdf:datatype="&xsd;string">part_of</rdfs:label>
		<rdfs:comment rdf:datatype="&xsd;string">The primitive instance-level relation p partOf p1 is illustrated in assertions such as: this instance of rhodopsin mediated phototransduction partOf this instance of visual perception. This relation satisfies at least the following standard axioms of mereology: reflexivity (for all p, p partOf p); anti-symmetry (for all p, p1, if p partOf p1 and p1 partOf p then p and p1 are identical); and transitivity (for all p, p1, p2, if p partOf p1 and p1 partOf p2, then p partOf p2). Analogous axioms hold also for parthood as a relation between spatial regions. For parthood as a relation between continuants, these axioms need to be modified to take account of the incorporation of a temporal argument. Thus for example the axiom of transitivity for continuants will assert that if c partOf c1 at t and c1 partOf c2 at t, then also c partOf c2 at t.</rdfs:comment>
		<rdfs:comment rdf:datatype="&xsd;string">inverseOf hasPart</rdfs:comment>
		<rdf:type rdf:resource="&owl;TransitiveProperty"/>
	</owl:ObjectProperty>
	<owl:ObjectProperty rdf:ID="precededBy">
		<rdfs:label rdf:datatype="&xsd;string">preceded_by</rdfs:label>
		<rdfs:comment rdf:datatype="&xsd;string">p precededBy p' if and only if: given any process p at a time t, there is some process p' at time t', and t' is earlier than t.</rdfs:comment>
		<rdfs:comment rdf:datatype="&xsd;string">inverseOf precedes</rdfs:comment>
		<rdf:type rdf:resource="&owl;TransitiveProperty"/>
	</owl:ObjectProperty>
	<owl:ObjectProperty rdf:ID="precedes">
		<rdfs:label rdf:datatype="&xsd;string">precedes</rdfs:label>
		<rdfs:comment rdf:datatype="&xsd;string"/>
		<rdfs:comment rdf:datatype="&xsd;string">inverseOf precededBy</rdfs:comment>
		<rdf:type rdf:resource="&owl;TransitiveProperty"/>
	</owl:ObjectProperty>
	<owl:ObjectProperty rdf:ID="properPartOf">
		<rdfs:label rdf:datatype="&xsd;string">proper_part_of</rdfs:label>
		<rdfs:comment rdf:datatype="&xsd;string">As for partOf, with the additional constraint that subject and object are distinct</rdfs:comment>
		<rdfs:subPropertyOf rdf:resource="#partOf"/>
		<rdfs:comment rdf:datatype="&xsd;string">inverseOf hasProperPart</rdfs:comment>
		<rdf:type rdf:resource="&owl;TransitiveProperty"/>
	</owl:ObjectProperty>
</rdf:RDF>